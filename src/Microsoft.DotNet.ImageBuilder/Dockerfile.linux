# Use this Dockerfile to create a runner image
#     docker build -t image-builder .
#     docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v <local path to build>:/repo -w /repo image-builder <image-build args>

# build Microsoft.DotNet.ImageBuilder
FROM mcr.microsoft.com/dotnet/core/sdk:3.1-alpine AS build-env
WORKDIR /image-builder

# restore packages before copying entire source - provides optimizations when rebuilding
COPY Microsoft.DotNet.ImageBuilder.sln ./
COPY NuGet.config ./
COPY src/Microsoft.DotNet.ImageBuilder.csproj ./src/
COPY tests/Microsoft.DotNet.ImageBuilder.Tests.csproj ./tests/
RUN dotnet restore Microsoft.DotNet.ImageBuilder.sln

# copy everything else and build
COPY . ./
RUN dotnet build Microsoft.DotNet.ImageBuilder.sln
RUN dotnet test tests/Microsoft.DotNet.ImageBuilder.Tests.csproj
RUN dotnet publish ./src/Microsoft.DotNet.ImageBuilder.csproj -c Release -o out -r linux-musl-x64 /p:ShowLinkerSizeComparison=true


# build runtime image
FROM mcr.microsoft.com/dotnet/core/runtime-deps:3.1-alpine

# install tooling
RUN apk add --no-cache \
        docker \
        git

# install manifest-tool
RUN wget -O /usr/local/bin/manifest-tool \
        "https://github.com/estesp/manifest-tool/releases/download/v1.0.2/manifest-tool-linux-amd64" \
    && chmod +x /usr/local/bin/manifest-tool

# install image-builder
WORKDIR /image-builder
COPY --from=build-env /image-builder/out ./

ENTRYPOINT ["/image-builder/Microsoft.DotNet.ImageBuilder"]
